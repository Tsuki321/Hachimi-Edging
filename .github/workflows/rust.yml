name: Auto Build & Release

on:
  push:
    branches: [main, master]
    tags: ['v*']
  workflow_dispatch:

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      - name: Build release binary
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Prepare artifact
        run: |
          mkdir dist
          # Copy .exe and .dll files
          cp target/x86_64-pc-windows-msvc/release/*.exe dist\ 2>NUL || exit 0
          cp target/x86_64-pc-windows-msvc/release/*.dll dist\ 2>NUL || exit 0
          cp README.md dist\ 2>NUL || exit 0

      - name: Archive build
        run: powershell Compress-Archive -Path dist\* -DestinationPath Hachimi-Edging-windows-${{ github.sha }}.zip

      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Automated Build: ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: Hachimi-Edging-windows-${{ github.sha }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    name: Build for Android (.so)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Android NDK
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r26d-linux.zip
          unzip -q android-ndk-r26d-linux.zip
          mv android-ndk-r26d $HOME/android-ndk

      - name: Set up environment variables for Android build
        run: |
          echo "ANDROID_NDK_HOME=$HOME/android-ndk" >> $GITHUB_ENV
          echo "$HOME/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH
          echo "CC_aarch64_linux_android=aarch64-linux-android21-clang" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=aarch64-linux-android21-clang" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-linux-android
          override: true

      - name: Build release library for Android
        run: cargo build --release --target aarch64-linux-android

      - name: Prepare artifact
        run: |
          mkdir dist
          # Copy .so files only
          cp target/aarch64-linux-android/release/*.so dist/ || true
          cp README.md dist/ || true

      - name: Archive build
        run: |
          cd dist
          zip -r ../Hachimi-Edging-android-${{ github.sha }}.zip .
        shell: bash

      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Automated Build: ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: Hachimi-Edging-android-${{ github.sha }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
